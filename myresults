#-----------------------------------------
#START OF GRADING SCRIPT
#keygen 20 > key20
#5 POINTS: key20 must exist
key20 exists!

#-----------------------------------------
#5 POINTS: Number of characters in key20, should be 21:
21 key20

#-----------------------------------------
#keygen 70000 > key70000
#5 POINTS: Number of characters in key70000, should be 70001:
70001 key70000

#-----------------------------------------
#otp_enc plaintext1 key20 $encport
#10 POINTS: Should return error about too-short key
Error: key 'key20' is too short

#-----------------------------------------
#otp_enc plaintext1 key70000 $encport
#20 POINTS: Should return encrypted version of plaintext1
NDXFQYJPWDDHUPVAYUHPQIPBYTCYWXI

#-----------------------------------------
#otp_enc plaintext1 key70000 $encport > ciphertext1
#10 POINTS: ciphertext1 must exist
ciphertext1 exists!

#-----------------------------------------
#10 POINTS: ciphertext1 must be same number of chars as source
#wc -m plaintext1
32 plaintext1
#Should be same: wc -m ciphertext1
32 ciphertext1

#-----------------------------------------
#5 POINTS: ciphertext1 should look encrypted
NDXFQYJPWDDHUPVAYUHPQIPBYTCYWXI

#-----------------------------------------
#otp_dec ciphertext1 key70000 $encport
#5 POINTS: Should fail giving error that otp_dec cannot use otp_enc_d
Client otp_dec: connection denied. Client must be otp_enc
#-----------------------------------------
#20 POINTS: should return decrypted ciphertext1 that matches source
#cat plaintext1
THE RED GOOSE FLIES AT MIDNIGHT
#otp_dec ciphertext1 key70000 $decport
THE RED GOOSE FLIES AT MIDNIGHT

#-----------------------------------------
#otp_dec ciphertext1 key70000 $decport > plaintext1_a
#10 POINTS: plaintext1_a must exist
plaintext1_a exists!

#-----------------------------------------
#5 POINTS: plaintext1 must be same number of chars as plaintext1_a
#wc -m plaintext1
32 plaintext1
#Should be same: wc -m ciphertext1
32 plaintext1_a

#-----------------------------------------
#20 POINTS: concurrent test of encryption - look for 4 ciphertext# files, or 5 where the 5th is 0 bytes
#5 POINTS: Should be only one error about plaintext5 being bad
Ten second sleep, your program must complete in this time
a.out
ciphertext1
ciphertext2
ciphertext4
compileall
key20
key70000
keygen
keygen.c
Makefile
mykey
mykey2
myresult
myresults
myshortkey
otp_dec
otp_dec.c
otp_dec_d
otp_dec_d.c
otp_enc
otp_enc.c
otp_enc_d
otp_enc_d.c
p4gradingscript
plaintext1
plaintext2
plaintext3
plaintext4
plaintext5
test
testcode.c

#-----------------------------------------
#15 POINTS: concurrent test of decryption - look for 4 plaintext#_a files
Ten second sleep, your program must complete in this time
a.out
ciphertext1
ciphertext2
ciphertext4
compileall
key20
key70000
keygen
keygen.c
Makefile
mykey
mykey2
myresult
myresults
myshortkey
otp_dec
otp_dec.c
otp_dec_d
otp_dec_d.c
otp_enc
otp_enc.c
otp_enc_d
otp_enc_d.c
p4gradingscript
plaintext1
plaintext1_a
plaintext2
plaintext2_a
plaintext3
plaintext4
plaintext4_a
plaintext5
test
testcode.c

#SCRIPT COMPLETE

